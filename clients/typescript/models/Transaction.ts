/* tslint:disable */
/* eslint-disable */
/**
 * Organizze API
 * Specification for the Organizze API described in [https://github.com/organizze/api-doc](https://github.com/organizze/api-doc)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * ID of the Bank Account
     * @type {number}
     * @memberof Transaction
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    date?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    paid?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    amountCents?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    totalInstallments?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    recurring?: boolean;
    /**
     * ID of the Bank Account
     * @type {number}
     * @memberof Transaction
     */
    accountId?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    categoryId?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    notes?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    attachmentsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    creditCardId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    creditCardInvoiceId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    paidCreditCardId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    paidCreditCardInvoiceId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    opositeTransactionId?: number | null;
    /**
     * ID of the Bank Account
     * @type {number}
     * @memberof Transaction
     */
    opositeAccountId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    updatedAt?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Transaction
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Transaction
     */
    attachments?: Array<string>;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'paid': !exists(json, 'paid') ? undefined : json['paid'],
        'amountCents': !exists(json, 'amount_cents') ? undefined : json['amount_cents'],
        'totalInstallments': !exists(json, 'total_installments') ? undefined : json['total_installments'],
        'recurring': !exists(json, 'recurring') ? undefined : json['recurring'],
        'accountId': !exists(json, 'account_id') ? undefined : json['account_id'],
        'categoryId': !exists(json, 'category_id') ? undefined : json['category_id'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'attachmentsCount': !exists(json, 'attachments_count') ? undefined : json['attachments_count'],
        'creditCardId': !exists(json, 'credit_card_id') ? undefined : json['credit_card_id'],
        'creditCardInvoiceId': !exists(json, 'credit_card_invoice_id') ? undefined : json['credit_card_invoice_id'],
        'paidCreditCardId': !exists(json, 'paid_credit_card_id') ? undefined : json['paid_credit_card_id'],
        'paidCreditCardInvoiceId': !exists(json, 'paid_credit_card_invoice_id') ? undefined : json['paid_credit_card_invoice_id'],
        'opositeTransactionId': !exists(json, 'oposite_transaction_id') ? undefined : json['oposite_transaction_id'],
        'opositeAccountId': !exists(json, 'oposite_account_id') ? undefined : json['oposite_account_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'attachments': !exists(json, 'attachments') ? undefined : json['attachments'],
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'description': value.description,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
        'paid': value.paid,
        'amount_cents': value.amountCents,
        'total_installments': value.totalInstallments,
        'recurring': value.recurring,
        'account_id': value.accountId,
        'category_id': value.categoryId,
        'notes': value.notes,
        'attachments_count': value.attachmentsCount,
        'credit_card_id': value.creditCardId,
        'credit_card_invoice_id': value.creditCardInvoiceId,
        'paid_credit_card_id': value.paidCreditCardId,
        'paid_credit_card_invoice_id': value.paidCreditCardInvoiceId,
        'oposite_transaction_id': value.opositeTransactionId,
        'oposite_account_id': value.opositeAccountId,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'tags': value.tags,
        'attachments': value.attachments,
    };
}

