/* tslint:disable */
/* eslint-disable */
/**
 * Organizze API
 * Specification for the Organizze API described in [https://github.com/organizze/api-doc](https://github.com/organizze/api-doc)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreditCard
 */
export interface CreditCard {
    /**
     * 
     * @type {number}
     * @memberof CreditCard
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    cardNetwork?: string;
    /**
     * 
     * @type {number}
     * @memberof CreditCard
     */
    closingDay?: number;
    /**
     * 
     * @type {number}
     * @memberof CreditCard
     */
    dueDay?: number;
    /**
     * 
     * @type {number}
     * @memberof CreditCard
     */
    limitCents?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreditCard
     */
    archived?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreditCard
     */
    _default?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    institutionId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    institutionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof CreditCard
     */
    type?: CreditCardTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum CreditCardTypeEnum {
    CreditCard = 'credit_card'
}


/**
 * Check if a given object implements the CreditCard interface.
 */
export function instanceOfCreditCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreditCardFromJSON(json: any): CreditCard {
    return CreditCardFromJSONTyped(json, false);
}

export function CreditCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'cardNetwork': !exists(json, 'card_network') ? undefined : json['card_network'],
        'closingDay': !exists(json, 'closing_day') ? undefined : json['closing_day'],
        'dueDay': !exists(json, 'due_day') ? undefined : json['due_day'],
        'limitCents': !exists(json, 'limit_cents') ? undefined : json['limit_cents'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'institutionId': !exists(json, 'institution_id') ? undefined : json['institution_id'],
        'institutionName': !exists(json, 'institution_name') ? undefined : json['institution_name'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function CreditCardToJSON(value?: CreditCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'card_network': value.cardNetwork,
        'closing_day': value.closingDay,
        'due_day': value.dueDay,
        'limit_cents': value.limitCents,
        'archived': value.archived,
        'default': value._default,
        'institution_id': value.institutionId,
        'institution_name': value.institutionName,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'type': value.type,
    };
}

